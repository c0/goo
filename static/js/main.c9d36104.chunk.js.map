{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["BLOB_COLOR","Ball","x","y","this","angle","Math","PI","random","vx","cos","vy","r","randBetween","low","high","GoopLine","thickness","droop","ly","ry","width","lp","rp","percentage","mp","max","t","ctx","beginPath","moveTo","arcTo","lineTo","fill","stroke","canvas","document","getElementById","getContext","window","innerWidth","height","innerHeight","origin","mouse","balls","count","randomCount","goopLines","GOOP_LINE_COUNT","floor","i","push","ballMakerSpeed","loop","clearRect","halfPercentage","forEach","goopLine","update","fillRect","length","b","fillStyle","br","arc","splice","maybeRemoveBall","requestAnimationFrame","onresize","addEventListener","e","clientX","clientY","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c9d36104.chunk.js","sourcesContent":["import './App.css'\n\nconst BLOB_COLOR = '#000'\nconst DECAY = 0.005\nconst VELOCITY = 1 // >= 1\n\nclass Ball {\n  constructor(x, y) {\n    this.x = x\n    this.y = y\n    this.angle = Math.PI * 2 * Math.random()\n    this.vx = (VELOCITY + Math.random() * (1 - VELOCITY)) * Math.cos(this.angle)\n    this.vy = VELOCITY + Math.random() * (1 - VELOCITY)\n    this.r = 12 + 3 * Math.random()\n  }\n\n  update() {\n    this.x += this.vx\n    this.y += this.vy\n    this.r -= DECAY\n  }\n}\n\nconst randBetween = (low, high) => {\n  return Math.random() * (high - low) + low\n}\n\nconst GOOP_Y_OFFSET = 50\n\nclass GoopLine {\n  constructor(y, thickness, droop) {\n    this.ly = y + GOOP_Y_OFFSET * Math.random() - GOOP_Y_OFFSET\n    this.ry = y + GOOP_Y_OFFSET * Math.random() - GOOP_Y_OFFSET\n\n    this.thickness = thickness\n    this.droop = droop\n    this.r = width\n  }\n\n  update(lp, rp, percentage) {\n    const mp = {\n      x: (lp.x + rp.x) / 2,\n      y: Math.max(\n        (this.ly + this.ry) / 2,\n        (this.ly + this.ry) / 2 + (1 - percentage) * this.droop - GOOP_Y_OFFSET\n      ),\n    }\n    const t = this.thickness\n    ctx.beginPath()\n    ctx.moveTo(lp.x, this.ly)\n    ctx.arcTo(mp.x, mp.y, rp.x, this.ry, this.r * (1 - percentage))\n    ctx.lineTo(rp.x, this.ry) // Finishes the line\n    ctx.lineTo(rp.x, this.ry + t)\n\n    ctx.arcTo(\n      mp.x,\n      mp.y + t,\n      lp.x,\n      this.ly + t,\n      this.r * 1.25 * (1 - percentage)\n    )\n\n    ctx.lineTo(lp.x, this.ly + t)\n    ctx.fill()\n    ctx.stroke()\n  }\n}\n\nconst canvas = document.getElementById('canvas')\nconst ctx = canvas.getContext('2d')\n\n// State\nlet width = (canvas.width = window.innerWidth)\nlet height = (canvas.height = window.innerHeight)\nlet origin = { x: width / 2, y: height / 2 }\nlet mouse = { x: width / 2, y: height / 2 }\nlet balls = []\nlet count = 0\nlet randomCount = 1\n\nlet goopLines = []\nconst GOOP_LINE_COUNT = Math.floor(height / 150)\n\nfor (let i = 0; i < GOOP_LINE_COUNT; i++) {\n  goopLines.push(\n    new GoopLine(\n      i * (height / GOOP_LINE_COUNT) + (50 * Math.random() - 50),\n      randBetween(30, 50),\n      randBetween(100, 300)\n    )\n  )\n}\nlet ballMakerSpeed = 10\nconst BALL_MAKER_EDGE = 50\n\nfunction loop() {\n  ctx.clearRect(0, 0, width, height)\n\n  const halfPercentage = (1 - mouse.y / height) / 2\n\n  goopLines.forEach((goopLine) => {\n    goopLine.update(\n      { x: width * halfPercentage },\n      { x: width * (1 - halfPercentage) },\n      halfPercentage * 2\n    )\n  })\n\n  // Side Walls\n  ctx.fillRect(0, 0, width * halfPercentage + 30, height)\n  ctx.fillRect(\n    width * (1 - halfPercentage) - 30,\n    0,\n    width * halfPercentage + 30,\n    height\n  )\n\n  // Create a new ball\n  if (count === randomCount) {\n    balls.push(new Ball(origin.x, origin.y))\n    count = 0\n    randomCount = 3 + Math.floor(Math.random() * 5)\n  }\n  count++\n\n  // Draw each ball\n  for (var i = 0; i < balls.length; i++) {\n    var b = balls[i]\n    ctx.fillStyle = BLOB_COLOR\n    ctx.beginPath()\n    var br = b.r >= 0 ? b.r : 0\n    ctx.arc(b.x, b.y, br, 0, Math.PI * 2, false)\n    ctx.fill()\n    b.update()\n  }\n\n  // Move ball 15% toward the mouse on each frame\n  // origin.x += (mouse.x - origin.x) * 0.15\n  // origin.y += (mouse.y - origin.y) * 0.15\n\n  // Move the ball maker back and forth\n  origin.y = -10\n  origin.x += ballMakerSpeed\n\n  if (origin.x > width - BALL_MAKER_EDGE) {\n    origin.x = width - BALL_MAKER_EDGE\n    ballMakerSpeed *= -1\n  } else if (origin.x < BALL_MAKER_EDGE) {\n    origin.x = BALL_MAKER_EDGE\n    ballMakerSpeed *= -1\n  }\n\n  // Draw the main mouse ball\n  ctx.fillStyle = BLOB_COLOR\n  ctx.beginPath()\n  ctx.arc(origin.x, origin.y, 15, 0, Math.PI * 2, false)\n  ctx.fill()\n\n  maybeRemoveBall()\n  requestAnimationFrame(loop)\n}\n\nfunction maybeRemoveBall() {\n  for (var i = 0; i < balls.length; i++) {\n    var b = balls[i]\n    if (\n      b.x + b.r < 0 ||\n      b.x - b.r > width ||\n      b.y + b.r < 0 ||\n      b.y - b.r > height ||\n      b.r <= 0\n    ) {\n      balls.splice(i, 1)\n    }\n  }\n}\n\nloop()\n\nwindow.onresize = () => {\n  width = canvas.width = window.innerWidth\n  height = canvas.height = window.innerHeight\n  origin = { x: width / 2, y: height / 2 }\n}\n\nwindow.addEventListener(\n  'mousemove',\n  function (e) {\n    mouse.x = e.clientX\n    mouse.y = e.clientY\n  },\n  false\n)\n\nconst App = () => <></>\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}