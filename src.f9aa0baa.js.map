{"version":3,"sources":["index.js"],"names":["BLOB_COLOR","DECAY","VELOCITY","LINKS","Ball","x","y","angle","Math","PI","random","vx","cos","vy","sin","r","canvas","document","getElementById","ctx","getContext","width","window","innerWidth","height","innerHeight","gap","origin","mouse","balls","count","randomCount","loop","clearRect","font","fillStyle","j","beginPath","arc","fill","push","floor","i","length","b","br","update","maybeRemoveBall","requestAnimationFrame","splice","onresize"],"mappings":";AA6FA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA7FA,IAAMA,EAAa,OACbC,EAAQ,GACRC,EAAW,EAEXC,EAAQ,EAERC,EAAAA,WACQC,SAAAA,EAAAA,EAAGC,GAAG,EAAA,KAAA,GACXD,KAAAA,EAAIA,EACJC,KAAAA,EAAIA,EACJC,KAAAA,MAAkB,EAAVC,KAAKC,GAASD,KAAKE,SAC3BC,KAAAA,IAAMT,EAAWM,KAAKE,UAAY,EAAIR,IAAaM,KAAKI,IAAI,KAAKL,OACjEM,KAAAA,IAAMX,EAAWM,KAAKE,UAAY,EAAIR,IAAaM,KAAKM,IAAI,KAAKP,OACjEQ,KAAAA,EAAI,GAAK,EAAIP,KAAKE,SAgF3B,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SA7EE,MAAA,WACOL,KAAAA,GAAK,KAAKM,GACVL,KAAAA,GAAK,KAAKO,GACVE,KAAAA,GAAKd,MA0Ed,EAvFMG,GAiBAY,EAASC,SAASC,eAAe,UACjCC,EAAMH,EAAOI,WAAW,MAG1BC,EAASL,EAAOK,MAAQC,OAAOC,WAC/BC,EAAUR,EAAOQ,OAASF,OAAOG,YACjCC,EAAML,GAASlB,EAAQ,GACvBwB,EAAS,CAAEtB,EAAGgB,EAAQ,EAAGf,EAAGkB,EAAS,GACrCI,EAAQ,CAAEvB,EAAGgB,EAAQ,EAAGf,EAAGkB,EAAS,GACpCK,EAAQ,GACRC,EAAQ,EACRC,EAAc,EAElB,SAASC,IACPb,EAAIc,UAAU,EAAG,EAAGZ,EAAOG,GAC3BL,EAAIe,KAAO,aAKXf,EAAIgB,UAAY,QAEX,IAAA,IAAIC,EAAI,EAAGA,EAAIjC,EAAOiC,IACzBjB,EAAIgB,UAAYnC,EAChBmB,EAAIkB,YACJlB,EAAImB,IAAIZ,GAAOU,EAAI,GAAIT,EAAOrB,EAAG,GAAI,EAAa,EAAVE,KAAKC,IAAQ,GACrDU,EAAIoB,OAGAT,IAAUC,IACZF,EAAMW,KAAK,IAAIpC,EAAKsB,GAAOU,EAAI,GAAIT,EAAOrB,IAC1CwB,EAAQ,EACRC,EAAc,EAAIvB,KAAKiC,MAAsB,EAAhBjC,KAAKE,WAEpCoB,IAIG,IAAA,IAAIY,EAAI,EAAGA,EAAIb,EAAMc,OAAQD,IAAK,CACjCE,IAAAA,EAAIf,EAAMa,GACdvB,EAAIgB,UAAYnC,EAChBmB,EAAIkB,YACAQ,IAAAA,EAAKD,EAAE7B,GAAK,EAAI6B,EAAE7B,EAAI,EAC1BI,EAAImB,IAAIM,EAAEvC,EAAGuC,EAAEtC,EAAGuC,EAAI,EAAa,EAAVrC,KAAKC,IAAQ,GACtCU,EAAIoB,OACJK,EAAEE,SAGJC,IACAC,sBAAsBhB,GAGxB,SAASe,IACF,IAAA,IAAIL,EAAI,EAAGA,EAAIb,EAAMc,OAAQD,IAAK,CAC/BE,IAAAA,EAAIf,EAAMa,IAEdE,EAAEvC,EAAIuC,EAAE7B,EAAI,GACZ6B,EAAEvC,EAAIuC,EAAE7B,EAAIM,GACZuB,EAAEtC,EAAIsC,EAAE7B,EAAI,GACZ6B,EAAEtC,EAAIsC,EAAE7B,EAAIS,GACZoB,EAAE7B,GAAK,YAEAc,EAAMa,GACbb,EAAMoB,OAAOP,EAAG,KAKtBV,IAEAV,OAAO4B,SAAW,WAChB7B,EAAQL,EAAOK,MAAQC,OAAOC,WAC9BC,EAASR,EAAOQ,OAASF,OAAOG,YAChCE,EAAS,CAAEtB,EAAGgB,EAAQ,EAAGf,EAAGkB,EAAS,GACrCE,EAAML,GAASlB,EAAQ","file":"src.f9aa0baa.js","sourceRoot":"../src","sourcesContent":["const BLOB_COLOR = '#000'\nconst DECAY = 0.1\nconst VELOCITY = 1 // >= 1\n\nconst LINKS = 3\n\nclass Ball {\n  constructor(x, y) {\n    this.x = x\n    this.y = y\n    this.angle = Math.PI * 2 * Math.random()\n    this.vx = (VELOCITY + Math.random() * (1 - VELOCITY)) * Math.cos(this.angle)\n    this.vy = (VELOCITY + Math.random() * (1 - VELOCITY)) * Math.sin(this.angle)\n    this.r = 12 + 3 * Math.random()\n  }\n\n  update() {\n    this.x += this.vx\n    this.y += this.vy\n    this.r -= DECAY\n  }\n}\n\nconst canvas = document.getElementById('canvas')\nconst ctx = canvas.getContext('2d')\n\n// State\nlet width = (canvas.width = window.innerWidth)\nlet height = (canvas.height = window.innerHeight)\nlet gap = width / (LINKS + 1)\nlet origin = { x: width / 2, y: height / 2 }\nlet mouse = { x: width / 2, y: height / 2 }\nlet balls = []\nlet count = 0\nlet randomCount = 5\n\nfunction loop() {\n  ctx.clearRect(0, 0, width, height)\n  ctx.font = '25px Arial'\n\n  //Set the color of the text. This can be\n  //an RGB color or a textual description\n  //such as red.\n  ctx.fillStyle = '0,0,0'\n\n  for (let j = 0; j < LINKS; j++) {\n    ctx.fillStyle = BLOB_COLOR\n    ctx.beginPath()\n    ctx.arc(gap * (j + 1), origin.y, 40, 0, Math.PI * 2, false)\n    ctx.fill()\n\n    // Create a new ball?\n    if (count === randomCount) {\n      balls.push(new Ball(gap * (j + 1), origin.y))\n      count = 0\n      randomCount = 3 + Math.floor(Math.random() * 5)\n    }\n    count++\n  }\n\n  // Draw each ball\n  for (var i = 0; i < balls.length; i++) {\n    var b = balls[i]\n    ctx.fillStyle = BLOB_COLOR\n    ctx.beginPath()\n    var br = b.r >= 0 ? b.r : 0\n    ctx.arc(b.x, b.y, br, 0, Math.PI * 2, false)\n    ctx.fill()\n    b.update()\n  }\n\n  maybeRemoveBall()\n  requestAnimationFrame(loop)\n}\n\nfunction maybeRemoveBall() {\n  for (var i = 0; i < balls.length; i++) {\n    const b = balls[i]\n    if (\n      b.x + b.r < 0 ||\n      b.x - b.r > width ||\n      b.y + b.r < 0 ||\n      b.y - b.r > height ||\n      b.r <= 0\n    ) {\n      delete balls[i]\n      balls.splice(i, 1)\n    }\n  }\n}\n\nloop()\n\nwindow.onresize = () => {\n  width = canvas.width = window.innerWidth\n  height = canvas.height = window.innerHeight\n  origin = { x: width / 2, y: height / 2 }\n  gap = width / (LINKS + 1)\n}\n"]}